type Summary @entity {
    id: ID!
    totalUsers: Int!
    totalPools: Int!
    totalStakers: Int!
    totalNodes: Int!
    totalStaked: BigInt!
    totalBlocks: Int!
    totalReward: BigInt!
    totalProtocols: Int!
    totalChains: Int!
}

type User @entity {
    id: ID!
    stakedBalance: BigInt!
    maturingBalance: BigInt!
    maturingTimestamp: BigInt!
    releasingBalance: BigInt!
    releasingTimestamp: BigInt!
    balance: BigInt!
    totalBlocks: Int!
    totalReward: BigInt!
    pool: StakingPool
}

type StakingPool @entity {
    id: ID!
    user: User!
    manager: ID!
    paused: Boolean!
    shares: BigInt!
    amount: BigInt!
    fee: StakingPoolFee!
    totalUsers: Int!
    totalCommission: BigInt!
    commissionPercentage: BigDecimal
    timestamp: BigInt!
}

type StakingPoolFee @entity {
    id: ID!
    pool: StakingPool!
    commission: Int
    gas: Int
    created: BigInt!
    lastUpdated: BigInt!
}

type PoolUser @entity {
    id: ID!
}

type Stake @entity {
    id: ID!
    user: User!
    value: BigInt!
    timestamp: BigInt!
}

type Unstake @entity {
    id: ID!
    user: User!
    value: BigInt!
    timestamp: BigInt!
}

type Withdraw @entity {
    id: ID!
    user: User!
    value: BigInt!
    timestamp: BigInt!
}

type PoolDeposit @entity {
    id: ID!
    pool: StakingPool!
    user: PoolUser!
    amount: BigInt!
    timestamp: BigInt!
}

type PoolStake @entity {
    id: ID!
    pool: StakingPool!
    user: PoolUser!
    amount: BigInt!
    shares: BigInt!
    timestamp: BigInt!
}

type PoolUnstake @entity {
    id: ID!
    pool: StakingPool!
    user: PoolUser!
    shares: BigInt!
    amount: BigInt!
    timestamp: BigInt!
}

type PoolWithdraw @entity {
    id: ID!
    pool: StakingPool!
    user: PoolUser!
    amount: BigInt!
    timestamp: BigInt!
}

type PoolBalance @entity {
    id: ID!
    pool: StakingPool!
    user: PoolUser
    shares: BigInt!
    balance: BigInt!
    stakeTimestamp: BigInt!
}

type PoolShareValue @entity {
    id: ID!
    pool: StakingPool!
    timestamp: BigInt!
    value: BigDecimal!
}

type Node @entity {
    id: ID!
    owner: User
    timestamp: BigInt!
    status: String
    totalBlocks: Int!
    totalReward: BigInt!
}

type Protocol @entity {
    id: ID!
    version: Int!
    address: ID!
    timestamp: BigInt!
    totalChains: Int!
}

type Chain @entity {
    id: ID!
    protocol: Protocol!
    number: Int!
    totalBlocks: Int!
    totalReward: BigInt!
    start: BigInt!
    targetInterval: Int
}

type Block @entity {
    id: ID!
    chain: Chain
    number: Int
    timestamp: BigInt!
    producer: User
    node: Node
    reward: BigInt
    commission: BigInt
    difficulty: BigInt
    gasPrice: BigInt!
    gasLimit: BigInt!
}
